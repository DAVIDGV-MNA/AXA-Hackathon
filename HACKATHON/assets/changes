# ================== UPDATED /create/step ===================
@app.post("/create/step")
def create_step(body: StepIn):
    # 0) Prefill from user text (LLM + regex) so we don't ask what's obvious
    answers_prefilled = dict(body.answers or {})
    inferred = extract_fields(body.user_request_text)
    for k in ("doc_type", "title", "language"):
        if not answers_prefilled.get(k) and inferred.get(k):
            answers_prefilled[k] = inferred[k]

    # 1) Let the model decide next best action using the enriched answers
    decision = _agent_decide(body.user_request_text, answers_prefilled, max_q=body.max_q)
    action = decision.get("action")

    # 2) If ask → return questions (only for fields still missing)
    if action == "ask":
        qs = decision.get("questions", [])
        # Filter out questions for fields we already inferred
        filtered = [q for q in qs if not answers_prefilled.get(q.get("field"))]
        return {
            "action": "ask",
            "reason": decision.get("reason",""),
            "questions": filtered,
            "missing_fields": [q.get("field") for q in filtered]
        }

    # 3) If verify → perform duplicate check using enriched answers
    result = _run_verify(
        user_text=body.user_request_text,
        answers=answers_prefilled,
        top_k=body.top_k,
        threshold=body.threshold
    )
    return {
        "action": "verify",
        "reason": decision.get("reason",""),
        "result": result
    }
# ===========================================================