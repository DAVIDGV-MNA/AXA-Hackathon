@startuml
title RAG Docs & Generator – Simple Architecture

left to right direction
skinparam shadowing false
skinparam componentStyle rectangle

actor User
rectangle "Client\nChat UI (Web/App)" as UI

node "Backend" as BE {
  [API / BFF] as API
  [RAG Service] as RAG
  [DocGen Service] as GEN
  [Ingestion Worker] as ING
}

database "Vector Index\n(FAISS)" as VEC
database "Metadata DB\n(Postgres)" as DB
database "Object Store\n(Raw & Generated)" as OBJ
cloud "SecureGPT\n/embeddings + /chat" as LLM
cloud "SSO / IdP" as IDP

User --> UI
UI --> API : Chat & Upload (HTTPS)
API --> IDP : Auth/SSO

' Upload → Ingest → Index
API --> OBJ : Store files
API --> ING : Enqueue ingestion job
ING --> LLM : Embed chunks
ING --> VEC : Upsert vectors
ING --> DB  : Upsert metadata (type, tags, ACL)

' Chat Retrieval (RAG)
API --> RAG : Query + filters
RAG --> VEC : ANN search (topK)
RAG --> DB  : Join metadata
RAG --> LLM : Build RAG answer
LLM --> API
API --> UI  : Stream answer + citations

' Chat-Driven Document Generation
API --> GEN : Create-doc intent + fields
GEN --> LLM : Draft sections (grounded)
GEN --> OBJ : Save DOCX/PDF (versioned)
GEN --> DB  : Register document metadata
API --> UI  : Return download link

@enduml