app.post("/securegpt/chat", async (req, res) => {
  // quick content-type sanity (helps when calling from HTML)
  const ct = req.headers["content-type"] || "";
  if (!ct.includes("application/json")) {
    return res.status(415).json({
      error: "Unsupported Media Type",
      hint: "Send application/json with a JSON body."
    });
  }

  // safe destructure with defaults
  const body = req.body || {};
  const {
    api_version = "2024-10-21",
    deployment_id,
    messages = [],
    temperature = 0.2,
    max_tokens = 512,
    top_p,
    presence_penalty,
    frequency_penalty
  } = body;

  // minimal validation to avoid undefined errors downstream
  if (!deployment_id) {
    return res.status(400).json({ error: "deployment_id is required" });
  }
  if (!Array.isArray(messages) || messages.length === 0) {
    return res.status(400).json({ error: "messages[] is required" });
  }

  // ... your existing token acquisition + fetch to SecureGPT here
  // be sure to handle/await and return JSON
});

async function callSecureGPTChat(messages) {
  const payload = {
    api_version: "2024-10-21",
    deployment_id: "gpt-40-2024-11-20",   // or your secured deployment
    messages,
    temperature: 0.2,
    max_tokens: 800
  };

  const res = await fetch("http://localhost:3001/securegpt/chat", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload)
  });

  if (!res.ok) {
    const err = await res.text().catch(() => "");
    throw new Error(`Proxy error ${res.status}: ${err}`);
  }
  return res.json();
}
